name: Test Flow Chain

on:
  workflow_dispatch:

concurrency:
  group: test_flow
  cancel-in-progress: true

env:
  JOB_ID: ""

jobs:
  first:
    name: First Job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: logs

  second:
    needs: [first]
    name: Second Job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main

      - uses: actions/download-artifact@v4
        with:
          name: logs
          path: logs

      - name: Display structure of downloaded files
        run: ls -al logs

      - run: cat logs/test.log

      - name: Get Job ID
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          run_id=${{ github.run_id }}
          repo=${{ github.repository }}
          job_name="get-job-id"  # Replace with your actual job name
          api_url="https://api.github.com/repos/${repo}/actions/runs/${run_id}/jobs"
          response=$(curl -s -H "Authorization: token $GITHUB_TOKEN" $api_url)
          echo "Response: $response"
          job_id=$(echo $response | jq -r --arg job_name "$job_name" '.jobs[] | select(.name == $job_name) | .id')
          echo "Job ID: $job_id"
          echo "JOB_ID=$job_id" >> $GITHUB_ENV

      - uses: ekeel/approval-action@v1.0.3
        id: approval
        with:
          token: ${{ secrets.ACTION_GH_PAT }}
          approvers: "arifsetyawan"
          minimumApprovals: "1"
          issueTitle: "${{ github.head_ref }} approval request"
          issueLabels: "cicd-approval"
          issueBody: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/job/${{ env.JOB_ID }}"
          waitInterval: "1"
          waitTimeout: "10"

      - name: Display structure of downloaded files 2
        run: ls -al logs

      - run: |
          echo ${{ steps.approval.outputs.approved }}

      - if: ${{ steps.approval.outputs.approved == 'false' }}
        run: exit 1

      - name: Display structure of downloaded files 3
        run: ls -al logs
